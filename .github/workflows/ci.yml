name: Build container image with previously built artifact and push it to the hub

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  ENV: prod
  VERSION: 1.0.0
  ARTIFACT_BUILD_DIR: _build
  INFRA_REPOSITORY: zxcev/ludo-infra
  PROVISION_INFRA_EVENT: provision_test_infra

jobs:
  # JOB1: CONF
  conf:
    runs-on: ubuntu-latest

    steps:
      - name: set environment variables
        run: echo "ARTIFACT_NAME=${{ vars.APP_NAME }}-${{ env.VERSION }}.jar" >> $GITHUB_ENV

  # JOB2: TRIGGER TEST INFRASTRUCTURE PROVISIONING
  trigger-test-infra-provision:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: trigger provisioning infrastructure for tests
        uses: ./.github/workflows/actions/trigger
        with:
          pat: ${{ secrets.PAT }}
          repository: ${{ env.INFRA_REPOSITORY }}
          event_type: ${{ env.PROVISION_INFRA_EVENT }}
          action_file: test-provision.yml

  # JOB3: BUILD
  build:
    needs: conf
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: setup
        uses: ./.github/workflows/actions/build_and_upload_artifact
        with:
          env: ${{ env.ENV }}
          pat: ${{ secrets.PAT }}
          artifact_name: ${{ env.ARTIFACT_NAME }}
          artifact_build_dir: ${{ env.ARTIFACT_BUILD_DIR }}

  # JOB4-1 Unit Test
  unit-test:
    needs: [build, trigger-test-infra-provision]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup
        uses: ./.github/workflows/actions/setup
        with:
          pat: ${{ secrets.PAT }}

      - name: test with gradle
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
        run: ./gradlew test -Dspring.profiles.active=test

  # JOB4-2 Integration Test
  integration-test:
    needs: [build, trigger-test-infra-provision]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup
        uses: ./.github/workflows/actions/setup
        with:
          pat: ${{ secrets.PAT }}

      - name: do integration test
        run: fake integration test

  # # JOB4-3 E2E Test
  e2e-test:
    needs: [build, trigger-test-infra-provision]
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: ./.github/workflows/actions/setup
        with:
          pat: ${{ secrets.PAT }}

      - name: do e2e test
        run: fake e2e test

  # # JOB5 BUILD CONTAINER IMAGE WITH JAR EXECUTABLE AND ENV
  # containerization:
  #   env:
  #     CONTAINER_IMAGE_NAME: "${{ vars.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}:${{ env.VERSION }}"

  #   needs: [unit-test, integration-test, e2e-test]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: download artifact
  #         uses: actions/download-artifact@v3
  #         with:
  #           name: ${{ env.ARTIFACT_FILE_NAME }}
  #           path: ${{ env.ARTIFACT_BUILD_DIR }}

  #     - name: log in to dockerhub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: push docker image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ env.CONTAINER_IMAGE_NAME }}

  # # notification:
  # #   needs: [trigger-test-infra-provision, conf, build-and-test]
  # #   runs-on: ubuntu-latest
  # #   if: always()
  # #   steps:
  # #     - name: check job status
  # #       env:
  # #         INFRA_STATUS: ${{ needs.trigger-test-infra-provision.result }}
  # #         CONF_STATUS: ${{ needs.conf.result }}
  # #         BUILD_TEST_STATUS: ${{ needs.build-and-test.result }}
  # #         run: |
  # #           echo "Infra Provision status: $INFRA_STATUS"
  # #           echo "Build and Test status: $BUILD_TEST_STATUS"

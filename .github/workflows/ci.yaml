name: Build container image with previously built artifact and push it to the hub

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  ENV: prod
  VERSION: 1.0.0
  SETUP_WORKFLOW_PATH: "./reusable_workflows/setup.yaml"
  ARTIFACT_BUILD_DIR: "_build"
  ARTIFACT_FILE_NAME: "${{ vars.APP_NAME }}-${{ env.VERSION }}.jar"
  PROVISION_INFRA_EVENT: "provision_infra"

jobs:
  # JOB1: CONF
  # conf:
  #   runs-on: ubuntu-latest

  #   outputs:
  #     artifact: 

  #   steps:
  #     - name: load conf
  #       run: echo "load conf"
      # - name: checkout
      #   uses: actions/checkout@v4

  # JOB2: TRIGGER TEST INFRASTRUCTURE PROVISIONING
  trigger-test-infra-provision:
    runs-on: ubuntu-latest
    steps:
      - name: generate token
        id: infra_test
        run: echo "token=$(openssl rand -hex 16)" >> $GITHUB_OUTPUT

      - name: trigger infrastructure provisioning for test
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: zxcev/ludo_infra
          event-type: ${{ env.PROVISION_INFRA_EVENT }}
          client-payload: |
            {
              "trigger_repo": "${{ github.repository }}",
              "trigger_sha": "${{ github.sha }}",
              "verification_token": "${{ steps.infra.outputs.token }}"
            }

  # JOB3: BUILD
  build:
    runs-on: ubuntu-latest

    steps:
      - name: setup
        uses: ${{ env.SETUP_WORKFLOW_PATH }}
        with:
          token: ${{ secrets.PAT }}

      - name: build with gradle
        run: ./gradlew build -x test -Dspring.profiles.active=prod -ParchiveName=_build/${{ env.ARTIFACT_FILE_NAME }}

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_FILE_NAME }}
          path: ${{ env.ARTIFACT_BUILD_DIR }}
  # JOB4-1 Unit Test
  unit-test:
    needs: [build, trigger-test-infra-provision]
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: ${{ env.SETUP_WORKFLOW_PATH }}
        with:
          token: ${{ secrets.PAT }}

    	- name: test with gradle
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
        run: ./gradlew test -Dspring.profiles.active=test
    

  # JOB4-2 Integration Test
  integration-test:
    needs: [build, trigger-test-infra-provision]
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: ${{ env.SETUP_WORKFLOW_PATH }}
        with:
          token: ${{ secrets.PAT }}



  # JOB4-3 E2E Test
  e2e-test:
    needs: [build, trigger-test-infra-provision]
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: ${{ env.SETUP_WORKFLOW_PATH }}
        with:
          token: ${{ secrets.PAT }}

      - name: do e2e test
        run: fake e2e test

  containerization:
    env:
      CONTAINER_IMAGE_NAME: "${{ vars.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}:${{ env.VERSION }}"
      
    needs: [unit-test, integration-test, e2e-test]
    runs-on: ubuntu-latest

    steps:
      - name: download artifact
          uses: actions/download-artifact@v3
          with:
            name: ${{ env.ARTIFACT_FILE_NAME }}
            path: ${{ env.ARTIFACT_BUILD_DIR }}

      - name: log in to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.CONTAINER_IMAGE_NAME }}  # notification:
  #   needs: [trigger-test-infra-provision, conf, build-and-test]
  #   runs-on: ubuntu-latest
  #   if: always()
  #   steps:
  #     - name: check job status
  #       env:
  #         INFRA_STATUS: ${{ needs.trigger-test-infra-provision.result }}
  #         CONF_STATUS: ${{ needs.conf.result }}
  #         BUILD_TEST_STATUS: ${{ needs.build-and-test.result }}
  #         run: |
  #           echo "Infra Provision status: $INFRA_STATUS"
  #           echo "Build and Test status: $BUILD_TEST_STATUS"
